{"version":3,"sources":["components/Controller/Controller.module.css","components/Controller/Joystick/Joystick.module.css","components/Controller/Button/Button.module.css","components/Controller/ConnectController/ControllerSettings/ControllerSettings.module.css","components/StreamEmbed/StreamEmbed.module.css","components/Controller/ConnectController/MapManager/MapManager.module.css","App.module.css","components/Header/Header.module.css","components/Controller/Diamond/Diamond.module.css","components/Controller/ConnectController/ConnectController.module.css","components/Controller/ConnectController/MapManager/JoystickBind/JoystickBind.module.css","socketio.js","gameController.js","components/Header/Header.js","components/Controller/Joystick/Joystick.js","components/Controller/Button/Button.js","components/Controller/Diamond/Blank.js","components/Controller/Diamond/Diamond.js","components/Controller/ConnectController/StreamSettings/StreamSettings.js","components/Controller/ConnectController/MapManager/Bind/Bind.js","components/Controller/ConnectController/MapManager/JoystickBind/JoystickBind.js","components/Controller/ConnectController/MapManager/MapManager.js","components/Controller/ConnectController/ControllerSettings/ControllerSettings.js","customHooks/stickyState.js","components/Controller/ConnectController/ConnectionSettings/ConnectionSettings.js","components/Controller/ConnectController/ConnectController.js","components/Controller/Controller.js","components/StreamEmbed/StreamEmbed.js","App.js","serviceWorker.js","index.js","components/Controller/ConnectController/MapManager/Bind/Bind.module.css"],"names":["module","exports","socket","controllerMap","keyboardMap","prevGamepadID","Header","props","className","classes","Joystick","classList","pressed","Pressed","styles","transform","x","y","style","Button","button","symbol","Blank","width","height","Diamond","buttons","StreamSettings","value","platform","onChange","e","setPlatform","target","channel","setChannel","io","require","gamepadState","a","b","up","down","right","left","zr","zl","r","l","plus","minus","r_stick","l_stick","home","capture","gamepadIndex","gamepadId","mirriorFuncs","rawGamepadState","doOnNextPress","calcJoystick","stick","axes","gamepad","emulatedValue","getControllerMap","keyStr","length","updateRawGamepad","buttonChanges","Object","keys","forEach","key","push","change","updateGamepadState","newGPState","changes","Math","round","console","log","command","commands","search","join","emit","modifierKeys","getNextButton","response","setBind","mirror","func","localStorage","setItem","exportMapToJSON","JSON","stringify","getItem","mapJSONString","map","parse","importMapFromJSON","Bind","inputRef","useRef","small","Mini","ColContainer","label","ref","buttonKey","onFocus","setToBind","onBlur","JoystickBind","emulated","MapManager","useState","setControllerMap","setEmulated","useEffect","id","filter","removeMirrorMap","setButtonBindTrigger","nextButton","current","blur","Row","ButtonGroup","RowSelect","type","checked","prev","ControllerSettings","showMapping","setShowMapping","activeController","index","setActiveController","parseInt","controllerList","i","SubNote","onClick","useStickyState","defaultValue","stickyValue","window","setValue","ConnectionSettings","connectionStatus","setConnectionStatus","location","hostname","setHostname","port","setPort","disconnect","jsx","test","ip","onConnect","onDisconnect","parsedIP","replace","on","setConnection","ConnectController","Controller","LargeButton","controllerState","SmallButton","Symbol","PressedAlt","Middle","StreamEmbed","twitchStream","script","firstUpdate","document","createElement","setAttribute","body","appendChild","addEventListener","Twitch","Embed","layout","theme","toLowerCase","stream","title","i18n-title","allowfullscreen","src","App","pollRef","setControllerList","setControllerState","setTimestamp","addController","prevControllerList","removeController","useCallback","gp","pollGamepads","gamepads","navigator","getGamepads","webkitGetGamepads","find","prevState","timestamp","prevTimestamp","maxButtonNum","translateGamepad","requestAnimationFrame","setState","findIndex","repeat","wantedKey","joystickKey","substring","lastIndexOf","pressKey","releaseKey","removeEventListener","activeIndex","activeGamepadId","cancelAnimationFrame","Boolean","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,2BAA2B,MAAQ,0BAA0B,YAAc,gCAAgC,YAAc,gCAAgC,IAAM,wBAAwB,OAAS,2BAA2B,QAAU,4BAA4B,WAAa,iC,mBCArXD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,4B,mBCAlED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,0B,mBCA5DD,EAAOC,QAAU,CAAC,IAAM,gCAAgC,QAAU,sC,mBCAlED,EAAOC,QAAU,CAAC,YAAc,mC,kBCAhCD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,IAAM,wBAAwB,UAAY,gC,mBCA1GD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,kBAAoB,+C,2ECAtCD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,aAAe,qC,8DCC/DC,ECAAC,EACAC,EA6BAC,E,0FCnBWC,EAVA,SAACC,GACd,OACE,6BACE,4BAAQC,UAAWC,IAAQH,QACzB,oD,iCCKOI,EATE,SAACH,GAChB,IAAII,EAAYF,IAAQC,SACpBH,EAAMK,UAASD,GAAa,IAAMF,IAAQI,SAC9C,IAAMC,EAAS,CACbC,UAAU,aAAD,OAAyB,GAAVR,EAAMS,EAArB,eAA4C,GAAVT,EAAMU,EAAxC,QAEX,OAAO,yBAAKT,UAAWG,EAAWO,MAAOJ,K,kCCI5BK,EAVA,SAACZ,GACd,IAAII,EAAYF,IAAQU,OAExB,OADIZ,EAAMa,OAAOR,UAASD,GAAa,IAAMF,IAAQI,SAEnD,yBAAKL,UAAWG,GACd,4BAAKJ,EAAMa,OAAOC,UCETC,EARD,SAACf,GAKb,OAAO,yBAAKW,MAJE,CACZK,MAAO,OACPC,OAAQ,UCsBGC,EAtBC,SAAClB,GACf,OACE,yBAAKC,UAAWC,IAAQgB,SACtB,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQL,OAAQb,EAAMmB,QAAQ,KAC9B,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,CAAQN,OAAQb,EAAMmB,QAAQ,KAC9B,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQN,OAAQb,EAAMmB,QAAQ,MAEhC,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQN,OAAQb,EAAMmB,QAAQ,KAC9B,kBAAC,EAAD,S,iBCKOC,EAxBQ,SAACpB,GACtB,OACE,oCACE,sCACA,6BACA,wCACA,4BACEqB,MAAOrB,EAAMsB,SACbC,SAAU,SAACC,GAAD,OAAOxB,EAAMyB,YAAYD,EAAEE,OAAOL,SAE5C,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,SAEF,uCACA,2BACEA,MAAOrB,EAAM2B,QACbJ,SAAU,SAACC,GACTxB,EAAM4B,WAAWJ,EAAEE,OAAOL,Y,wDPnB9BQ,EAAKC,EAAQ,ICKfC,EAAe,CACjBC,GAAG,EACHC,GAAG,EACHxB,GAAG,EACHC,GAAG,EACHwB,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,IAAI,EACJC,IAAI,EACJC,GAAG,EACHC,GAAG,EACHC,MAAM,EACNC,OAAO,EACPC,SAAS,EACTC,SAAS,EACTC,MAAM,EACNC,SAAS,EACT,gBAAiB,EACjB,gBAAiB,EACjB,eAAgB,EAChB,eAAgB,GAGdC,GAAgB,EAChBC,EAAY,EAEZC,EAAe,GAQfC,EAAkB,KAClBC,EAAgB,KAGdC,EAAe,SAACC,EAAOC,EAAMC,GACjC,IAAIC,EAAgB,EACpB,GAAIC,KAAmB,sBAAyC,IAAlBV,EAAqB,CACjE,IAAIW,EAASL,EAAQ,UAAYC,EAAO,IAExC,GACEG,KAAmBC,GAAmB,MAATJ,EAAe,OAAS,OACnDC,EAAQrC,QAAQyC,QAClBF,KAAmBC,GAAmB,MAATJ,EAAe,QAAU,SACpDC,EAAQrC,QAAQyC,OAElB,OAAOH,EAGTA,GAAiBD,EAAQrC,QACvBuC,KAAmBC,GAAmB,MAATJ,EAAe,OAAS,QACrDlD,SACG,EACD,EACJoD,GAAiBD,EAAQrC,QACvBuC,KAAmBC,GAAmB,MAATJ,EAAe,QAAU,UACtDlD,QACE,EACA,OAEJoD,EAAgBD,EAAQD,KAAKG,KAAmBJ,EAAQ,UAAYC,IAGtE,OAAOE,GAqFHI,EAAmB,SAACL,GACxB,GAAwB,OAApBL,GAA4BrD,IAAkBmD,EAGhD,OAFAE,EAAkBK,OAClB1D,EAAgBmD,GAIlB,IAAIa,EAAgB,GACpBC,OAAOC,KAAKR,EAAQrC,SAAS8C,SAAQ,SAACC,GAChCf,EAAgBhC,QAAQ+C,GAAK7C,QAAUmC,EAAQrC,QAAQ+C,GAAK7C,OAC9DyC,EAAcK,KAAK,CACjBD,IAAKA,EACL7C,MAAOmC,EAAQrC,QAAQ+C,GAAK7C,WAKlC8B,EAAkBK,EAElBM,EAAcG,SAAQ,SAACG,GAAW,IAExBF,EAAeE,EAAfF,IAAK7C,EAAU+C,EAAV/C,MAET+B,GAAiB/B,IACnB+B,EAAcc,GACdd,EAAgB,UAMhBiB,EAAqB,SAACC,GAC1B,IAAIC,EAAU,GACdR,OAAOC,KAAKjC,GAAckC,SAAQ,SAACC,IAEF,kBAAtBnC,EAAamC,GAChBM,KAAKC,MAAwB,GAAlBH,EAAWJ,IAAa,KAAOnC,EAAamC,GACvDI,EAAWJ,KAASnC,EAAamC,MAErCQ,QAAQC,IACN,kBACET,EACA,OAC8B,kBAAtBnC,EAAamC,GACjBM,KAAKC,MAAwB,GAAlBH,EAAWJ,IAAa,GACnCI,EAAWJ,IACf,MACAnC,EAAamC,IAEjBK,EAAQJ,KAAK,CACXD,IAAKA,EACL7C,MAC+B,kBAAtBU,EAAamC,GAChBM,KAAKC,MAAwB,GAAlBH,EAAWJ,IAAa,GACnCI,EAAWJ,KAEnBnC,EAAamC,GACkB,kBAAtBnC,EAAamC,GAChBM,KAAKC,MAAwB,GAAlBH,EAAWJ,IAAa,GACnCI,EAAWJ,OAIrB,IDjN0BU,ECiNtBC,EAAW,GACfN,EAAQN,SAAQ,SAACG,GACf,IAAIQ,EAEIV,EAAeE,EAAfF,IAAK7C,EAAU+C,EAAV/C,OAEiB,IAA1B6C,EAAIY,OAAO,WACbF,EAAUV,EAERU,IADY,IAAVvD,EACS,KAEA,OAGbuD,EAAU,KAENV,EAAIY,OAAO,SAAW,EACxBF,GAAW,KACFV,EAAIY,OAAO,UAAY,IAChCF,GAAW,MAGTV,EAAIY,OAAO,MAAQ,EACrBF,GAAW,KACFV,EAAIY,OAAO,MAAQ,IAC5BF,GAAW,MAGbA,GAAWvD,GAEbwD,EAASV,KAAKS,MAEZC,EAASjB,OAAS,IACpBc,QAAQC,IAAIE,EAASE,KAAK,MDlPFH,ECmPZC,EAASE,KAAK,KDlPxBpF,GAEFA,EAAOqF,KAAK,IAAKJ,KCqPfK,EAAe,CAAC,UAAW,QAAS,OA+F7BC,EAAgB,SAACC,GAC5B/B,EAAgB+B,GAGLC,EAAU,SAAClB,EAAKrD,IACL,IAAlBmC,EAEFnD,EAAYqE,GAAOrD,EAGnBjB,EAAcsE,GAAOrD,EAEvBqC,EAAae,SAAQ,SAACoB,GAAD,OAAYA,EAAOC,KAAK5B,SAC7C6B,aAAaC,QAAQ,oBAAqBC,MAiB/BA,EAAkB,WAC7B,OAAOC,KAAKC,UAAU,CACpB/F,cAAeA,EACfC,YAAaA,KAUJ6D,GAAmB,WAC9B,OAAyB,IAAlBV,EAAsBnD,EAAcD,GA+EzC2F,aAAaK,QAAQ,qBAtFQ,SAACC,GAChC,IAAIC,EAAMJ,KAAKK,MAAMF,GACrBjG,EAAgBkG,EAAIlG,cACpBC,EAAciG,EAAIjG,YAoFlBmG,CAAkBT,aAAaK,QAAQ,uBA5EvChG,EAAgB,CACdoC,EAAG,EACHC,EAAG,EACHxB,EAAG,EACHC,EAAG,EACHwB,GAAI,GACJC,KAAM,GACNE,KAAM,GACND,MAAO,GACPE,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,EAAG,EACHC,KAAM,EACNC,MAAO,EACPC,QAAS,GACTC,QAAS,GAET,gBAAiB,EACjB,gBAAiB,EACjB,eAAgB,EAChB,eAAgB,EAEhB,oBAAoB,EAEpB,mBAAoB,GACpB,qBAAsB,GACtB,qBAAsB,GACtB,sBAAuB,GACvB,oBAAqB,EACrB,qBAAsB,EACtB,kBAAmB,EACnB,oBAAqB,GAGvBhD,EAAc,CACZmC,EAAG,IACHC,EAAG,IACHxB,EAAG,IACHC,EAAG,IACHwB,GAAI,IACJC,KAAM,IACNE,KAAM,IACND,MAAO,IACPE,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,EAAG,EACHC,KAAM,IACNC,MAAO,IACPI,QAAS,MACTD,KAAM,OACNF,QAAS,GACTC,QAAS,GAET,gBAAiB,EACjB,gBAAiB,EACjB,eAAgB,EAChB,eAAgB,EAEhB,oBAAoB,EAEpB,mBAAoB,UACpB,qBAAsB,YACtB,qBAAsB,YACtB,sBAAuB,aACvB,oBAAqB,IACrB,qBAAsB,IACtB,kBAAmB,IACnB,oBAAqB,KAGvBK,EAAae,SAAQ,SAACoB,GAAD,OAAYA,EAAOC,KAAK5B,UOnchCuC,OApBf,SAAcjG,GACZ,IAAMkG,EAAWC,mBAEjB,OACE,yBAAKlG,UAAWC,IAAQ+F,MAAQjG,EAAMoG,MAAQ,IAAMlG,IAAQmG,KAAO,KACjE,yBAAKpG,UAAWC,IAAQoG,cACrBtG,EAAMoG,MAAQ,2BAAIpG,EAAMuG,OAAa,4BAAKvG,EAAMuG,QAEnD,yBAAKtG,UAAWC,IAAQoG,cACtB,2BACEE,IAAKN,EACL7E,MAAOqC,KAAmB1D,EAAMyG,WAChCC,QAAS,SAAClF,GAAD,OAAOxB,EAAM2G,UAAU3G,EAAMyG,UAAWP,IACjDU,OAAQ,SAACpF,GAAD,OAAOxB,EAAM2G,UAAU,KAAMT,S,mBCgChCW,OA7Cf,SAAsB7G,GACpB,OACE,yBAAKC,UAAWC,KAAQ+F,MACtB,yBAAKhG,UAAWC,KAAQoG,cACtB,4BAAKtG,EAAMuG,QAEZvG,EAAM8G,SACL,oCACE,yBAAK7G,UAAWC,KAAQoG,cACtB,kBAAC,GAAD,CACEF,OAAO,EACPG,MAAOvG,EAAMyG,UAAU3B,OAAO,MAAQ,EAAI,OAAS,KACnD2B,UACEzG,EAAMyG,WACLzG,EAAMyG,UAAU3B,OAAO,MAAQ,EAAI,QAAU,OAEhD6B,UAAW3G,EAAM2G,aAGrB,yBAAK1G,UAAWC,KAAQoG,cACtB,kBAAC,GAAD,CACEF,OAAO,EACPG,MAAOvG,EAAMyG,UAAU3B,OAAO,MAAQ,EAAI,QAAU,OACpD2B,UACEzG,EAAMyG,WACLzG,EAAMyG,UAAU3B,OAAO,MAAQ,EAAI,SAAW,SAEjD6B,UAAW3G,EAAM2G,cAKvB,yBAAK1G,UAAWC,KAAQoG,cACtB,kBAAC,GAAD,CACEF,OAAO,EACPG,MAAM,QACNE,UAAWzG,EAAMyG,UACjBE,UAAW3G,EAAM2G,eCqIdI,OAlKf,SAAoB/G,GAAQ,IAAD,EACegH,mBAAStD,MADxB,mBACpB9D,EADoB,KACLqH,EADK,OAGGD,mBAAS,MAHZ,mBAGVL,GAHU,aAIOK,mBAASpH,EAAc,qBAJ9B,mBAIlBkH,EAJkB,KAIRI,EAJQ,KAMzBC,qBAAU,WTiWgB,IAAC7B,EAAM8B,ES1V/B,OT0VyB9B,ES/VZ,SAACQ,GACZmB,EAAiBnB,GACjBoB,EAAYpB,EAAI,sBT6VasB,ES5V5B,aT6VLlE,EAAaiB,KAAK,CAAEiD,GAAIA,EAAI9B,KAAMA,IS3VzB,WACLZ,QAAQC,IAAI,sBT6Va,SAACyC,GAC9BlE,EAAamE,QAAO,SAAChC,GAAD,OAAYA,EAAO+B,KAAOA,KS7V1CE,CAAgB,iBAEjB,IAEH,IAAMC,EAAuB,SAACrD,EAAKgC,GAEjCS,EAAUzC,GAGRgB,EADEhB,EACY,SAACsD,GAEbpC,EAAQlB,EAAKsD,GACbtB,EAASuB,QAAQC,QAGL,OAKlB,OACE,yBAAKzH,UAAWC,IAAQ6G,YACtB,yBAAK9G,UAAWC,IAAQyH,KACtB,yBAAK1H,UAAWC,IAAQ0H,aACtB,kBAAC,GAAD,CAAMrB,MAAM,KAAKE,UAAU,KAAKE,UAAWY,IAC3C,kBAAC,GAAD,CACEhB,MAAM,OACNE,UAAU,OACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,OACNE,UAAU,OACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,QACNE,UAAU,QACVE,UAAWY,KAGf,yBAAKtH,UAAWC,IAAQ0H,aACtB,kBAAC,GAAD,CAAMrB,MAAM,IAAIE,UAAU,IAAIE,UAAWY,IACzC,kBAAC,GAAD,CAAMhB,MAAM,IAAIE,UAAU,IAAIE,UAAWY,IACzC,kBAAC,GAAD,CAAMhB,MAAM,IAAIE,UAAU,IAAIE,UAAWY,IACzC,kBAAC,GAAD,CAAMhB,MAAM,IAAIE,UAAU,IAAIE,UAAWY,MAG7C,yBAAKtH,UAAWC,IAAQ0H,aACtB,yBAAK3H,UAAWC,IAAQyH,KACtB,iDACA,2BACE1H,UAAWC,IAAQ2H,UACnBC,KAAK,WACLC,QAASjB,EACTvF,SAAU,WACR2F,GAAY,SAACc,GACX5C,EAAQ,oBAAqB4C,UAKrC,kBAAC,GAAD,CACEzB,MAAM,eACNO,SAAUA,EACVL,UAAU,eACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,eACNO,SAAUA,EACVL,UAAU,eACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,gBACNO,SAAUA,EACVL,UAAU,gBACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,gBACNO,SAAUA,EACVL,UAAU,gBACVE,UAAWY,KAGf,yBAAKtH,UAAWC,IAAQyH,KACtB,yBAAK1H,UAAWC,IAAQ0H,aACtB,kBAAC,GAAD,CACErB,MAAM,UACNE,UAAU,UACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,QACNE,UAAU,QACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,mBACNE,UAAU,UACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,cACNE,UAAU,KACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,eACNE,UAAU,IACVE,UAAWY,KAGf,yBAAKtH,UAAWC,IAAQ0H,aACtB,kBAAC,GAAD,CACErB,MAAM,OACNE,UAAU,OACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,OACNE,UAAU,OACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,oBACNE,UAAU,UACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,eACNE,UAAU,KACVE,UAAWY,IAEb,kBAAC,GAAD,CACEhB,MAAM,gBACNE,UAAU,IACVE,UAAWY,QChIRU,OAlCf,SAA4BjI,GAAQ,IAAD,EACKgH,oBAAS,GADd,mBAC1BkB,EAD0B,KACbC,EADa,KAGjC,OACE,oCACE,wCACA,6BACA,0CACA,4BACE9G,MAAOrB,EAAMoI,iBAAiBC,MAC9B9G,SAAU,SAACC,GAAD,OAAOxB,EAAMsI,oBAAoBC,SAAS/G,EAAEE,OAAOL,UAE5DrB,EAAMwI,eAAe1C,KAAI,SAAC2C,GACzB,OACE,4BAAQvE,IAAKuE,EAAEJ,MAAOhH,MAAOoH,EAAEJ,OAC5BI,EAAErB,QAKX,uBAAGnH,UAAWC,IAAQwI,SAAtB,uEAGA,yBAAKzI,UAAWC,IAAQyH,KACtB,kDACA,4BAAQgB,QAAS,kBAAMR,GAAgBD,KACpCA,EAAc,IAAM,MAGxBA,EAAc,kBAAC,GAAD,MAAiB,OCnBvBU,GAZQ,SAACC,EAAc3E,GAAS,IAAD,EAClB8C,oBAAS,WACjC,IAAM8B,EAAcC,OAAOxD,aAAaK,QAAQ1B,GAChD,OAAuB,OAAhB4E,EAAuBpD,KAAKK,MAAM+C,GAAeD,KAHd,mBACrCxH,EADqC,KAC9B2H,EAD8B,KAS5C,OAHA7B,qBAAU,WACR4B,OAAOxD,aAAaC,QAAQtB,EAAKwB,KAAKC,UAAUtE,MAC/C,CAAC6C,EAAK7C,IACF,CAACA,EAAO2H,ICwEFC,GA/EY,SAACjJ,GAAW,IAAD,EACYgH,mBAAS,IADrB,mBAC7BkC,EAD6B,KACXC,EADW,OAEJP,GAC9BG,OAAOK,SAASC,SAChB,YAJkC,mBAE7BA,EAF6B,KAEnBC,EAFmB,OAMZV,GAAeG,OAAOK,SAASG,KAAM,QANzB,mBAM7BA,EAN6B,KAMvBC,EANuB,KAkB9BC,EAAa,WbFnB9J,EAAO8J,aACP9J,EAAS,KaGPwJ,EAAoB,iBAGlBO,EAAM,KACV,OAAQR,GACN,IAAK,aACHQ,EACE,oCACE,6CACiBL,EADjB,IAC4BE,EAD5B,OAGA,4BAAQZ,QAASc,GAAjB,WAGJ,MACF,IAAK,YACHC,EACE,oCACE,4CACgBL,EADhB,IAC2BE,GAE3B,4BAAQZ,QAASc,GAAjB,eAGJ,MACF,QACEC,EACE,oCACE,wCACA,2BACErI,MAAOgI,EACP9H,SAAU,SAACC,GACT8H,EAAY9H,EAAEE,OAAOL,UAIzB,oCACA,2BACEA,MAAOkI,EACPhI,SAAU,SAACC,GACG,WACJmI,KAAKnI,EAAEE,OAAOL,QAAQmI,EAAQhI,EAAEE,OAAOL,UAInD,4BAAQsH,QAzDA,WACdQ,EAAoB,cbTK,SAACS,EAAIC,EAAWC,GAC3C,IAAIC,EAAW,UAAYH,EAAGI,QAAQ,UAAW,IAAIA,QAAQ,WAAY,KACzErK,EAASkC,EAAGkI,IAELE,GAAG,UAAWJ,GACrBlK,EAAOsK,GAAG,aAAcH,GaKtBI,CACEb,EAAW,IAAME,GACjB,kBAAMJ,EAAoB,gBAC1B,kBAAMA,EAAoB,qBAoDtB,YAKR,OACE,oCACE,0CACA,6BACCO,ICnDQS,GArBW,SAACnK,GAGzB,OACE,yBAAKC,UAAWC,IAAQiK,mBACtB,kBAAC,EAAD,CACExI,QAAS3B,EAAM2B,QACfC,WAAY5B,EAAM4B,WAClBN,SAAUtB,EAAMsB,SAChBG,YAAazB,EAAMyB,cAErB,kBAAC,GAAD,MACA,kBAAC,GAAD,CACE2G,iBAAkBpI,EAAMoI,iBACxBE,oBAAqBtI,EAAMsI,oBAC3BE,eAAgBxI,EAAMwI,mBCwFf4B,GAxGI,SAACpK,GAClB,OACE,yBAAKC,UAAWC,IAAQkK,YACtB,6BACE,6BACE,yBACEnK,UACEC,IAAQmK,aACPrK,EAAMsK,gBAAN,EAA6B,IAAMpK,IAAQI,QAAU,KAGxD,iCAEF,yBAAKL,UAAWC,IAAQyH,KACtB,yBACE1H,UACEC,IAAQqK,aACPvK,EAAMsK,gBAAN,GAA8B,IAAMpK,IAAQI,QAAU,KAGzD,kCAEF,yBACEL,UACEC,IAAQsK,QACPxK,EAAMsK,gBAAN,MAAiC,IAAMpK,IAAQuK,WAAa,KAG/D,mCAIN,kBAAC,EAAD,CACEhK,EAAGT,EAAMsK,gBAAgB,gBACzB5J,EAAGV,EAAMsK,gBAAgB,gBACzBjK,QAASL,EAAMsK,gBAAN,UAEX,kBAAC,EAAD,CACEnJ,QAAS,CACP,CAAEL,OAAQ,SAAKT,QAASL,EAAMsK,gBAAgBlI,OAC9C,CAAEtB,OAAQ,SAAKT,QAASL,EAAMsK,gBAAgBnI,MAC9C,CAAErB,OAAQ,SAAKT,QAASL,EAAMsK,gBAAgBpI,IAC9C,CAAEpB,OAAQ,SAAKT,QAASL,EAAMsK,gBAAgBjI,UAIpD,yBAAKpC,UAAWC,IAAQwK,QACtB,kBAAC,GAAD,CACElC,eAAgBxI,EAAMwI,eACtBJ,iBAAkBpI,EAAMoI,iBACxBE,oBAAqBtI,EAAMsI,oBAC3B3G,QAAS3B,EAAM2B,QACfC,WAAY5B,EAAM4B,WAClBN,SAAUtB,EAAMsB,SAChBG,YAAazB,EAAMyB,eAGvB,6BACE,6BACE,yBACExB,UACEC,IAAQmK,aACPrK,EAAMsK,gBAAN,EAA6B,IAAMpK,IAAQI,QAAU,KAGxD,iCAEF,yBAAKL,UAAWC,IAAQyH,KACtB,yBACE1H,UACEC,IAAQsK,QACPxK,EAAMsK,gBAAN,KAAgC,IAAMpK,IAAQuK,WAAa,KAG9D,iCAEF,yBACExK,UACEC,IAAQqK,aACPvK,EAAMsK,gBAAN,GAA8B,IAAMpK,IAAQI,QAAU,KAGzD,oCAIN,kBAAC,EAAD,CACEa,QAAS,CACP,CAAEL,OAAQ,IAAKT,QAASL,EAAMsK,gBAAgBtI,GAC9C,CAAElB,OAAQ,IAAKT,QAASL,EAAMsK,gBAAgBrI,GAC9C,CAAEnB,OAAQ,IAAKT,QAASL,EAAMsK,gBAAgB7J,GAC9C,CAAEK,OAAQ,IAAKT,QAASL,EAAMsK,gBAAgB5J,MAGlD,kBAAC,EAAD,CACED,EAAGT,EAAMsK,gBAAgB,iBACzB5J,EAAGV,EAAMsK,gBAAgB,iBACzBjK,QAASL,EAAMsK,gBAAN,a,oBCtCJK,GA7DK,SAAC3K,GACnB,IAAM4K,EAAezE,mBACf0E,EAAS1E,mBACT2E,EAAc3E,kBAAO,GAE3BgB,qBAAU,WACR0D,EAAOpD,QAAUsD,SAASC,cAAc,UACxCH,EAAOpD,QAAQwD,aAAa,MAAO,uCAEnCF,SAASG,KAAKC,YAAYN,EAAOpD,SACjCoD,EAAOpD,QAAQ2D,iBAAiB,QAAQ,WACtCR,EAAanD,QAAU,IAAIsB,OAAOsC,OAAOC,MAAM,cAAe,CAC5DrK,OAAQ,OACRD,MAAO,OACPuK,OAAQ,QACR5J,QAAS3B,EAAM2B,QACf6J,MAAO,cAGV,CAACxL,EAAM2B,UAEVwF,qBAAU,WACH2D,EAAYrD,QAKfqD,EAAYrD,SAAU,EAJC,WAAnBzH,EAAMsB,UACRsJ,EAAanD,QAAQ7F,WAAW5B,EAAM2B,QAAQ8J,iBAKjD,CAACzL,EAAM2B,QAAS3B,EAAMsB,WAEzB,IAAIoK,EAAS,KACb,OAAQ1L,EAAMsB,UACZ,IAAK,SACHoK,EAAS,yBAAKtE,GAAG,cAAcnH,UAAWC,KAAQyK,cAClD,MACF,IAAK,QACHe,EACE,4BACEzL,UAAWC,KAAQyK,YACnBgB,MAAM,wBACNC,aAAW,mFACXC,gBAAgB,OAChBC,IACE,kCACA9L,EAAM2B,QACN,uBAEFX,MAAM,QACNC,OAAO,QAEN,KAOT,OAAOyK,GCsEMK,GAtHH,SAAC/L,GAAW,IAYlBgM,EAZiB,EACuBhF,mBAAS,CACnD,CACEqB,OAAQ,EACRjB,GAAI,cAJa,mBACdoB,EADc,KACEyD,EADF,OAO2BjF,oBAAU,GAPrC,mBAOdoB,EAPc,KAOIE,EAPJ,OAQyBtB,mBAAS,IARlC,mBAQdsD,EARc,KAQG4B,EARH,OASStD,GAAe,aAAc,WATtC,mBASdjH,EATc,KASLC,EATK,OAUWoF,mBAAS,QAVpB,mBAUd1F,EAVc,KAUJG,EAVI,OAWauF,mBAAS,GAXtB,mBAWHmF,GAXG,WAefC,EAAgB,SAAC5K,GACrBkD,QAAQC,IAAInD,EAAEgC,QAAQ4D,GAAK,aAC3B6E,GAAkB,SAACI,GAAD,4BACbA,GADa,CAEhB,CACEhE,MAAO7G,EAAEgC,QAAQ6E,MACjBjB,GAAI5F,EAAEgC,QAAQ4D,UAMdkF,EAAmBC,uBACvB,SAAC/K,GACK4G,IAAqB5G,EAAEgC,QAAQ6E,OAAOC,GAAqB,GAC/D2D,GAAkB,SAACI,GAAD,mBACbA,EAAmBhF,QAAO,SAACmF,GAAD,OAAQA,EAAGnE,QAAU7G,EAAEgC,QAAQ6E,eAGhE,CAACD,IAIGqE,EAAeF,uBAAY,WAE/B,IAAIG,EAAWC,UAAUC,YACrBD,UAAUC,cACVD,UAAUE,kBACVF,UAAUE,oBACV,GANiC,EASjBrE,EAAesE,MACjC,SAACrE,GAAD,OAAOA,EAAEJ,QAAUD,KADfC,EAT+B,EAS/BA,MAT+B,EASxBjB,GAITsF,EAASrE,IACX6D,GAAmB,SAACa,GAClB,OAAIA,EAAUC,YAAcN,EAASrE,GAAO2E,WAC1Cb,GAAa,SAACc,GAAD,OAAmBP,EAASrE,GAAO2E,ahBU1B,SAACxJ,GAC/B,IAAI0J,EAAe1J,EAAQrC,QAAQyC,OAC/BU,EAAa,CACftC,EACEpC,EAAcoC,EAAIkL,GACd1J,EAAQrC,QAAQvB,EAAcoC,GAAG3B,QAEvC4B,EACErC,EAAcqC,EAAIiL,GACd1J,EAAQrC,QAAQvB,EAAcqC,GAAG5B,QAEvCI,EACEb,EAAca,EAAIyM,GACd1J,EAAQrC,QAAQvB,EAAca,GAAGJ,QAEvCK,EACEd,EAAcc,EAAIwM,GACd1J,EAAQrC,QAAQvB,EAAcc,GAAGL,QAEvC6B,GACEtC,EAAcsC,GAAKgL,GACf1J,EAAQrC,QAAQvB,EAAcsC,IAAI7B,QAExC8B,KACEvC,EAAcuC,KAAO+K,GACjB1J,EAAQrC,QAAQvB,EAAcuC,MAAM9B,QAE1C+B,MACExC,EAAcwC,MAAQ8K,GAClB1J,EAAQrC,QAAQvB,EAAcwC,OAAO/B,QAE3CgC,KACEzC,EAAcyC,KAAO6K,GACjB1J,EAAQrC,QAAQvB,EAAcyC,MAAMhC,QAE1CiC,GACE1C,EAAc0C,GAAK4K,GACf1J,EAAQrC,QAAQvB,EAAc0C,IAAIjC,QAExCkC,GACE3C,EAAc2C,GAAK2K,GACf1J,EAAQrC,QAAQvB,EAAc2C,IAAIlC,QAExCmC,EACE5C,EAAc4C,EAAI0K,GACd1J,EAAQrC,QAAQvB,EAAc4C,GAAGnC,QAEvCoC,EACE7C,EAAc6C,EAAIyK,GACd1J,EAAQrC,QAAQvB,EAAc6C,GAAGpC,QAEvCqC,KACE9C,EAAc8C,KAAOwK,GACjB1J,EAAQrC,QAAQvB,EAAc8C,MAAMrC,QAE1CsC,MACE/C,EAAc+C,MAAQuK,GAClB1J,EAAQrC,QAAQvB,EAAc+C,OAAOtC,QAE3CuC,QACEhD,EAAcgD,QAAUsK,GACpB1J,EAAQrC,QAAQvB,EAAcgD,SAASvC,QAE7CwC,QACEjD,EAAciD,QAAUqK,GACpB1J,EAAQrC,QAAQvB,EAAciD,SAASxC,QAG7C,gBAAiBgD,EAAa,QAAS,IAAKG,GAC5C,gBAAiBH,EAAa,QAAS,IAAKG,GAC5C,eAAgBH,EAAa,OAAQ,IAAKG,GAC1C,eAAgBH,EAAa,OAAQ,IAAKG,IAM5C,OAHAa,EAAmBC,GACnBT,EAAiBL,GAEVc,EgBtFQ6I,CAAiBT,EAASrE,KAE1B0E,KAKbf,EAAUoB,sBAAsBX,KAC/B,CAACrE,IAqCJ,OAlCAjB,qBAAU,WACR4B,OAAOqC,iBAAiB,mBAAoBgB,GAC5CrD,OAAOqC,iBAAiB,WAAW,SAAC5J,GAAD,OhBqLf,SAACA,EAAG6L,GAC1B,IAAI/I,EAAU,eAAQvC,GACtB,GAAIqB,IAAiE,IAAhD6B,EAAaqI,WAAU,SAAC7E,GAAD,OAAOA,IAAMjH,EAAE0C,OAGzD,OAFAd,EAAc5B,EAAE0C,UAChBd,EAAgB,MAIlB,IAAsB,IAAlBJ,IAAwBxB,EAAE+L,OAAQ,CACpC,IAAIC,GAAY,EAChBzJ,OAAOC,KAAKnE,GAAaoE,SAAQ,SAACC,GAChC,GAAI1C,EAAE0C,MAAQrE,EAAYqE,GAGxB,GAFAQ,QAAQC,IAAInD,EAAE0C,IAAM,MAAQrE,EAAYqE,IACxCsJ,GAAY,EACRtJ,EAAIY,OAAO,WAAa,EAAG,CAE7B,IAAI2I,EAAcvJ,EAAIwJ,UAAU,EAAGxJ,EAAIyJ,YAAY,MAC/CzJ,EAAIY,OAAO,QAAU,GAAKZ,EAAIY,OAAO,UAAY,GACnDR,EAAWmJ,IAAgB,EAC3BJ,GAAS,SAACrF,GACR,OAAO,eAAK1D,QAGdA,EAAWmJ,IAAgB,EAC3BJ,GAAS,SAACrF,GACR,OAAO,eAAK1D,QAIZA,EAAWmJ,IAAgB,GAEpBnJ,EAAWmJ,GAAe,KADnCnJ,EAAWmJ,GAAe,QAM5BnJ,EAAWJ,IAAO,EAClBmJ,GAAS,SAACrF,GACR,OAAO,eAAK1D,UAKF,IAAdkJ,GAAoBnJ,EAAmBC,IgBhODsJ,CAASpM,EAAG0K,MACtDnD,OAAOqC,iBAAiB,SAAS,SAAC5J,GAAD,OhBmOX,SAACA,EAAG6L,GAC5B,IAAI/I,EAAU,eAAQvC,IACA,IAAlBiB,IACFe,OAAOC,KAAKnE,GAAaoE,SAAQ,SAACC,GAChC,GACE1C,EAAE0C,IAAIuH,iBACuB,kBAArB5L,EAAYqE,GAChBrE,EAAYqE,GAAKuH,cACjB5L,EAAYqE,IAEhB,GAAIA,EAAIY,OAAO,WAAa,EAAG,CAE7B,IAAI2I,EAAcvJ,EAAIwJ,UAAU,EAAGxJ,EAAIyJ,YAAY,MAC/CzJ,EAAIY,OAAO,QAAU,GAAKZ,EAAIY,OAAO,UAAY,EACnB,IAA5BR,EAAWmJ,KACbnJ,EAAWmJ,IAAgB,EAC3BJ,GAAS,SAACrF,GACR,OAAO,eAAK1D,OAIgB,IAA5BA,EAAWmJ,KACbnJ,EAAWmJ,IAAgB,EAC3BJ,GAAS,SAACrF,GACR,OAAO,eAAK1D,QAIdA,EAAWmJ,IAAgB,GAEpBnJ,EAAWmJ,GAAe,KADnCnJ,EAAWmJ,GAAe,QAK5BnJ,EAAWJ,IAAO,EAClBmJ,GAAS,SAACrF,GACR,OAAO,eAAK1D,SAKpBD,EAAmBC,IgB5QqBuJ,CAAWrM,EAAG0K,QACrD,IAGH/E,qBAAU,WAGR,OAFA4B,OAAOqC,iBAAiB,sBAAuBkB,GAExC,WACLvD,OAAO+E,oBAAoB,sBAAuBxB,MAEnD,CAACA,IAGJnF,qBAAU,WhB5DoB,IAAC4G,EAAaC,EgBwE1C,OhBxE6BD,EgB+D3B3F,EhB/DwC4F,EgBgExCxF,EAAesE,MAAK,SAACrE,GAAD,OAAOA,EAAEJ,QAAUD,KAAkBhB,GhB/D7DpE,EAAe+K,EACf9K,EAAY+K,EACZ9K,EAAae,SAAQ,SAACoB,GAAD,OAAYA,EAAOC,KAAK5B,UgB+DjB,IAAtB0E,IAEF4D,EAAUoB,sBAAsBX,IAI3B,WAELwB,qBAAqBjC,MAEtB,CAACS,EAAcrE,IAGhB,yBAAKnI,UAAWC,IAAQ6L,KACtB,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAapK,QAASA,EAASL,SAAUA,IACzC,kBAAC,GAAD,CACEkH,eAAgBA,EAChBJ,iBAAkBA,EAClBE,oBAAqBA,EACrBgC,gBAAiBA,EACjB3I,QAASA,EACTC,WAAYA,EACZN,SAAUA,EACVG,YAAaA,MCjHDyM,QACW,cAA7BnF,OAAOK,SAASC,UAEe,UAA7BN,OAAOK,SAASC,UAEhBN,OAAOK,SAASC,SAAS8E,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFvD,SAASwD,eAAe,SDyHpB,kBAAmB5B,WACrBA,UAAU6B,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpK,QAAQoK,MAAMA,EAAMC,a,kBExI5BtP,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,aAAe,8B","file":"static/js/main.694e0a40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controller\":\"Controller_Controller__1Aul2\",\"Left\":\"Controller_Left__1Hy_j\",\"Middle\":\"Controller_Middle__1GbCj\",\"Right\":\"Controller_Right__2XgLG\",\"LargeButton\":\"Controller_LargeButton__2bfgB\",\"SmallButton\":\"Controller_SmallButton__2eHdF\",\"Row\":\"Controller_Row__AecI8\",\"Symbol\":\"Controller_Symbol__2Lzx4\",\"Pressed\":\"Controller_Pressed__3hjJH\",\"PressedAlt\":\"Controller_PressedAlt__3vFMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Joystick\":\"Joystick_Joystick__36ZvB\",\"Pressed\":\"Joystick_Pressed__3HkqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1lZbL\",\"Pressed\":\"Button_Pressed__NFLXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"ControllerSettings_Row__3zp26\",\"SubNote\":\"ControllerSettings_SubNote__3Hq9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StreamEmbed\":\"StreamEmbed_StreamEmbed__xOThP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonGroup\":\"MapManager_ButtonGroup__17dp-\",\"Row\":\"MapManager_Row__2TIji\",\"RowSelect\":\"MapManager_RowSelect__1gOnV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Diamond\":\"Diamond_Diamond__1HugI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ConnectController\":\"ConnectController_ConnectController__1pOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bind\":\"JoystickBind_Bind__3CJ4A\",\"ColContainer\":\"JoystickBind_ColContainer__3bdbN\"};","const io = require(\"socket.io-client\");\n\nlet socket;\n\nexport const setConnection = (ip, onConnect, onDisconnect) => {\n  let parsedIP = \"http://\" + ip.replace(\"http://\", \"\").replace(\"https://\", \"\");\n  socket = io(parsedIP);\n\n  socket.on(\"connect\", onConnect);\n  socket.on(\"disconnect\", onDisconnect);\n};\n\nexport const sendCommand = (command) => {\n  if (socket) {\n    //console.log(\"sending the command '\" + command + \"'\");\n    socket.emit(\"p\", command);\n  }\n};\n\nexport const disconnectSocket = () => {\n  socket.disconnect();\n  socket = null;\n};\n\nexport default socket;\n","import { sendCommand } from \"./socketio\";\n\nlet controllerMap;\nlet keyboardMap;\n\nlet gamepadState = {\n  a: false,\n  b: false,\n  x: false,\n  y: false,\n  up: false,\n  down: false,\n  right: false,\n  left: false,\n  zr: false,\n  zl: false,\n  r: false,\n  l: false,\n  plus: false,\n  minus: false,\n  r_stick: false,\n  l_stick: false,\n  home: false,\n  capture: false,\n  \"right-stick-x\": 0,\n  \"right-stick-y\": 0,\n  \"left-stick-x\": 0,\n  \"left-stick-y\": 0,\n};\n\nlet gamepadIndex = -1;\nlet gamepadId = 0;\nlet prevGamepadID;\nlet mirriorFuncs = [];\n\nexport const setActiveGamepad = (activeIndex, activeGamepadId) => {\n  gamepadIndex = activeIndex;\n  gamepadId = activeGamepadId;\n  mirriorFuncs.forEach((mirror) => mirror.func(getControllerMap()));\n};\n\nlet rawGamepadState = null;\nlet doOnNextPress = null;\n\n//Returns the joysitck value after taking into account if the sticks are being emulated from buttons\nconst calcJoystick = (stick, axes, gamepad) => {\n  let emulatedValue = 0;\n  if (getControllerMap()[\"emulate-joystick\"] && gamepadIndex !== -1) {\n    let keyStr = stick + \"-stick-\" + axes + \"-\";\n\n    if (\n      getControllerMap()[keyStr + (axes === \"x\" ? \"left\" : \"up\")] >\n        gamepad.buttons.length ||\n      getControllerMap()[keyStr + (axes === \"x\" ? \"right\" : \"down\")] >\n        gamepad.buttons.length\n    ) {\n      return emulatedValue;\n    }\n\n    emulatedValue += gamepad.buttons[\n      getControllerMap()[keyStr + (axes === \"x\" ? \"left\" : \"up\")]\n    ].pressed\n      ? -1\n      : 0;\n    emulatedValue += gamepad.buttons[\n      getControllerMap()[keyStr + (axes === \"x\" ? \"right\" : \"down\")]\n    ].pressed\n      ? 1\n      : 0;\n  } else {\n    emulatedValue = gamepad.axes[getControllerMap()[stick + \"-stick-\" + axes]];\n  }\n\n  return emulatedValue;\n};\n\n//translates a gamepad press through the map and returns a Gamepad layout.\nexport const translateGamepad = (gamepad) => {\n  let maxButtonNum = gamepad.buttons.length;\n  let newGPState = {\n    a:\n      controllerMap.a < maxButtonNum\n        ? gamepad.buttons[controllerMap.a].pressed\n        : false,\n    b:\n      controllerMap.b < maxButtonNum\n        ? gamepad.buttons[controllerMap.b].pressed\n        : false,\n    x:\n      controllerMap.x < maxButtonNum\n        ? gamepad.buttons[controllerMap.x].pressed\n        : false,\n    y:\n      controllerMap.y < maxButtonNum\n        ? gamepad.buttons[controllerMap.y].pressed\n        : false,\n    up:\n      controllerMap.up < maxButtonNum\n        ? gamepad.buttons[controllerMap.up].pressed\n        : false,\n    down:\n      controllerMap.down < maxButtonNum\n        ? gamepad.buttons[controllerMap.down].pressed\n        : false,\n    right:\n      controllerMap.right < maxButtonNum\n        ? gamepad.buttons[controllerMap.right].pressed\n        : false,\n    left:\n      controllerMap.left < maxButtonNum\n        ? gamepad.buttons[controllerMap.left].pressed\n        : false,\n    zr:\n      controllerMap.zr < maxButtonNum\n        ? gamepad.buttons[controllerMap.zr].pressed\n        : false,\n    zl:\n      controllerMap.zl < maxButtonNum\n        ? gamepad.buttons[controllerMap.zl].pressed\n        : false,\n    r:\n      controllerMap.r < maxButtonNum\n        ? gamepad.buttons[controllerMap.r].pressed\n        : false,\n    l:\n      controllerMap.l < maxButtonNum\n        ? gamepad.buttons[controllerMap.l].pressed\n        : false,\n    plus:\n      controllerMap.plus < maxButtonNum\n        ? gamepad.buttons[controllerMap.plus].pressed\n        : false,\n    minus:\n      controllerMap.minus < maxButtonNum\n        ? gamepad.buttons[controllerMap.minus].pressed\n        : false,\n    r_stick:\n      controllerMap.r_stick < maxButtonNum\n        ? gamepad.buttons[controllerMap.r_stick].pressed\n        : false,\n    l_stick:\n      controllerMap.l_stick < maxButtonNum\n        ? gamepad.buttons[controllerMap.l_stick].pressed\n        : false,\n    //add logic here to emulate joysticks.\n    \"right-stick-x\": calcJoystick(\"right\", \"x\", gamepad),\n    \"right-stick-y\": calcJoystick(\"right\", \"y\", gamepad),\n    \"left-stick-x\": calcJoystick(\"left\", \"x\", gamepad),\n    \"left-stick-y\": calcJoystick(\"left\", \"y\", gamepad),\n  };\n\n  updateGamepadState(newGPState);\n  updateRawGamepad(gamepad);\n\n  return newGPState;\n};\n\n//Updates a raw gamepad state used for finding the button/stick to bind to\nconst updateRawGamepad = (gamepad) => {\n  if (rawGamepadState === null || prevGamepadID !== gamepadId) {\n    rawGamepadState = gamepad;\n    prevGamepadID = gamepadId;\n    return;\n  }\n\n  let buttonChanges = [];\n  Object.keys(gamepad.buttons).forEach((key) => {\n    if (rawGamepadState.buttons[key].value !== gamepad.buttons[key].value) {\n      buttonChanges.push({\n        key: key,\n        value: gamepad.buttons[key].value,\n      });\n    }\n  });\n\n  rawGamepadState = gamepad;\n\n  buttonChanges.forEach((change) => {\n    //checks if the change was on a button\n    const { key, value } = change;\n\n    if (doOnNextPress && value) {\n      doOnNextPress(key);\n      doOnNextPress = null;\n    }\n  });\n};\n\n//Sends commands to the API through the socket\nconst updateGamepadState = (newGPState) => {\n  let changes = [];\n  Object.keys(gamepadState).forEach((key) => {\n    if (\n      typeof gamepadState[key] === \"number\"\n        ? Math.round(newGPState[key] * 10) / 10 !== gamepadState[key]\n        : newGPState[key] !== gamepadState[key]\n    ) {\n      console.log(\n        \"updatingState: \" +\n          key +\n          \" | \" +\n          (typeof gamepadState[key] === \"number\"\n            ? Math.round(newGPState[key] * 10) / 10\n            : newGPState[key]) +\n          \" ? \" +\n          gamepadState[key]\n      );\n      changes.push({\n        key: key,\n        value:\n          typeof gamepadState[key] === \"number\"\n            ? Math.round(newGPState[key] * 10) / 10\n            : newGPState[key],\n      });\n      gamepadState[key] =\n        typeof gamepadState[key] === \"number\"\n          ? Math.round(newGPState[key] * 10) / 10\n          : newGPState[key];\n    }\n  });\n\n  let commands = [];\n  changes.forEach((change) => {\n    let command;\n    //checks if the change was on a button\n    const { key, value } = change;\n\n    if (key.search(\"-stick\") === -1) {\n      command = key;\n      if (value === true) {\n        command += \" d\";\n      } else {\n        command += \" u\";\n      }\n    } else {\n      command = \"s \";\n\n      if (key.search(\"left\") >= 0) {\n        command += \"l \";\n      } else if (key.search(\"right\") >= 0) {\n        command += \"r \";\n      }\n\n      if (key.search(\"x\") >= 0) {\n        command += \"h \";\n      } else if (key.search(\"y\") >= 0) {\n        command += \"v \";\n      }\n\n      command += value;\n    }\n    commands.push(command);\n  });\n  if (commands.length > 0) {\n    console.log(commands.join(\"&\"));\n    sendCommand(commands.join(\"&\"));\n  }\n};\n\n//setting up translation for keyboard\nconst modifierKeys = [\"Control\", \"Shift\", \"Alt\"];\n\nexport const pressKey = (e, setState) => {\n  let newGPState = { ...gamepadState };\n  if (doOnNextPress && modifierKeys.findIndex((i) => i === e.key) === -1) {\n    doOnNextPress(e.key);\n    doOnNextPress = null;\n    return;\n  }\n\n  if (gamepadIndex === -1 && !e.repeat) {\n    let wantedKey = false;\n    Object.keys(keyboardMap).forEach((key) => {\n      if (e.key === keyboardMap[key]) {\n        console.log(e.key + \" | \" + keyboardMap[key]);\n        wantedKey = true;\n        if (key.search(\"-stick\") >= 0) {\n          //joy-stick-logic\n          let joystickKey = key.substring(0, key.lastIndexOf(\"-\"));\n          if (key.search(\"-up\") >= 0 || key.search(\"-left\") >= 0) {\n            newGPState[joystickKey] -= 1;\n            setState((prev) => {\n              return { ...newGPState };\n            });\n          } else {\n            newGPState[joystickKey] += 1;\n            setState((prev) => {\n              return { ...newGPState };\n            });\n          }\n\n          if (newGPState[joystickKey] < -1) {\n            newGPState[joystickKey] = 0;\n          } else if (newGPState[joystickKey] > 1) {\n            newGPState[joystickKey] = 0;\n          }\n        } else {\n          //console.log(\"Setting \" + key + \" to true\");\n          newGPState[key] = true;\n          setState((prev) => {\n            return { ...newGPState };\n          });\n        }\n      }\n    });\n    if (wantedKey === true) updateGamepadState(newGPState);\n  }\n};\n\nexport const releaseKey = (e, setState) => {\n  let newGPState = { ...gamepadState };\n  if (gamepadIndex === -1) {\n    Object.keys(keyboardMap).forEach((key) => {\n      if (\n        e.key.toLowerCase() ===\n        (typeof keyboardMap[key] === \"string\"\n          ? keyboardMap[key].toLowerCase()\n          : keyboardMap[key])\n      ) {\n        if (key.search(\"-stick\") >= 0) {\n          //joy-stick-logic\n          let joystickKey = key.substring(0, key.lastIndexOf(\"-\"));\n          if (key.search(\"-up\") >= 0 || key.search(\"-left\") >= 0) {\n            if (newGPState[joystickKey] !== 0) {\n              newGPState[joystickKey] += 1;\n              setState((prev) => {\n                return { ...newGPState };\n              });\n            }\n          } else {\n            if (newGPState[joystickKey] !== 0) {\n              newGPState[joystickKey] -= 1;\n              setState((prev) => {\n                return { ...newGPState };\n              });\n            }\n          }\n          if (newGPState[joystickKey] < -1) {\n            newGPState[joystickKey] = 0;\n          } else if (newGPState[joystickKey] > 1) {\n            newGPState[joystickKey] = 0;\n          }\n        } else {\n          newGPState[key] = false;\n          setState((prev) => {\n            return { ...newGPState };\n          });\n        }\n      }\n    });\n    updateGamepadState(newGPState);\n  }\n};\n\n//This is takes a function as a parameter. When the next button is pressed, run the function and return the button key (0-16)\nexport const getNextButton = (response) => {\n  doOnNextPress = response;\n};\n\nexport const setBind = (key, button) => {\n  if (gamepadIndex === -1) {\n    //console.log(\"Binding \" + key + \" to \" + button + \" for Keyboard\");\n    keyboardMap[key] = button;\n  } else {\n    //console.log(\"Binding \" + key + \" to \" + button + \" for Gamepad\");\n    controllerMap[key] = button;\n  }\n  mirriorFuncs.forEach((mirror) => mirror.func(getControllerMap()));\n  localStorage.setItem(\"ControllerMapping\", exportMapToJSON());\n};\n\nexport const addMirrorMap = (func, id) => {\n  mirriorFuncs.push({ id: id, func: func });\n};\n\nexport const removeMirrorMap = (id) => {\n  mirriorFuncs.filter((mirror) => mirror.id !== id);\n};\n\nexport const checkPress = (key) => {\n  let mapIndex = Object.values(keyboardMap).indexOf(key);\n  let button = Object.keys(keyboardMap)[mapIndex];\n  return button;\n};\n\nexport const exportMapToJSON = () => {\n  return JSON.stringify({\n    controllerMap: controllerMap,\n    keyboardMap: keyboardMap,\n  });\n};\n\nexport const importMapFromJSON = (mapJSONString) => {\n  let map = JSON.parse(mapJSONString);\n  controllerMap = map.controllerMap;\n  keyboardMap = map.keyboardMap;\n};\n\nexport const getControllerMap = () => {\n  return gamepadIndex === -1 ? keyboardMap : controllerMap;\n};\n\nexport const setBindsToDefault = () => {\n  controllerMap = {\n    a: 0,\n    b: 1,\n    x: 2,\n    y: 3,\n    up: 12,\n    down: 13,\n    left: 14,\n    right: 15,\n    zr: 5,\n    zl: 4,\n    r: 7,\n    l: 6,\n    plus: 9,\n    minus: 8,\n    r_stick: 11,\n    l_stick: 10,\n    //only read if the emulated joysticks is false\n    \"right-stick-x\": 2,\n    \"right-stick-y\": 3,\n    \"left-stick-x\": 0,\n    \"left-stick-y\": 1,\n    //set to true for emulated joysticks\n    \"emulate-joystick\": false,\n    //only read if the emulated joysticks is true\n    \"right-stick-y-up\": 12,\n    \"right-stick-y-down\": 13,\n    \"right-stick-x-left\": 14,\n    \"right-stick-x-right\": 15,\n    \"left-stick-x-left\": 0,\n    \"left-stick-x-right\": 1,\n    \"left-stick-y-up\": 0,\n    \"left-stick-y-down\": 1,\n  };\n\n  keyboardMap = {\n    a: \"p\",\n    b: \"l\",\n    x: \"o\",\n    y: \"k\",\n    up: \"W\",\n    down: \"S\",\n    left: \"A\",\n    right: \"D\",\n    zr: 5,\n    zl: 4,\n    r: 7,\n    l: 6,\n    plus: \"=\",\n    minus: \"-\",\n    capture: \"End\",\n    home: \"Home\",\n    r_stick: 11,\n    l_stick: 10,\n    //only read if the emulated joysticks is false This will not crash, but it wont do anything...\n    \"right-stick-x\": 2,\n    \"right-stick-y\": 3,\n    \"left-stick-x\": 0,\n    \"left-stick-y\": 1,\n    //set to true for emulated joysticks\n    \"emulate-joystick\": true,\n    //only read if the emulated joysticks is true\n    \"right-stick-y-up\": \"ArrowUp\",\n    \"right-stick-y-down\": \"ArrowDown\",\n    \"right-stick-x-left\": \"ArrowLeft\",\n    \"right-stick-x-right\": \"ArrowRight\",\n    \"left-stick-x-left\": \"a\",\n    \"left-stick-x-right\": \"d\",\n    \"left-stick-y-up\": \"w\",\n    \"left-stick-y-down\": \"s\",\n  };\n\n  mirriorFuncs.forEach((mirror) => mirror.func(getControllerMap()));\n};\n//check if we have a Map in storage, if so load it, else we will load the default.\nif (localStorage.getItem(\"ControllerMapping\")) {\n  importMapFromJSON(localStorage.getItem(\"ControllerMapping\"));\n} else {\n  setBindsToDefault();\n}\n","import React from \"react\";\nimport classes from \"./Header.module.css\";\n\nconst Header = (props) => {\n  return (\n    <div>\n      <header className={classes.Header}>\n        <p>Remote Play Switch</p>\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport classes from \"./Joystick.module.css\";\n\nconst Joystick = (props) => {\n  let classList = classes.Joystick;\n  if (props.pressed) classList += \" \" + classes.Pressed;\n  const styles = {\n    transform: `translate(${props.x * 10}px, ${props.y * 10}px)`,\n  };\n  return <div className={classList} style={styles}></div>;\n};\n\nexport default Joystick;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nconst Button = (props) => {\n  let classList = classes.Button;\n  if (props.button.pressed) classList += \" \" + classes.Pressed;\n  return (\n    <div className={classList}>\n      <h1>{props.button.symbol}</h1>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst Blank = (props) => {\n  const style = {\n    width: \"4rem\",\n    height: \"4em\",\n  };\n  return <div style={style} />;\n};\n\nexport default Blank;\n","import React from \"react\";\nimport classes from \"./Diamond.module.css\";\nimport Button from \"../Button/Button\";\nimport Blank from \"./Blank\";\n\nconst Diamond = (props) => {\n  return (\n    <div className={classes.Diamond}>\n      <div>\n        <Blank />\n        <Button button={props.buttons[3]} />\n        <Blank />\n      </div>\n      <div>\n        <Button button={props.buttons[2]} />\n        <Blank />\n        <Button button={props.buttons[1]} />\n      </div>\n      <div>\n        <Blank />\n        <Button button={props.buttons[0]} />\n        <Blank />\n      </div>\n    </div>\n  );\n};\n\nexport default Diamond;\n","import React from \"react\";\n\nconst StreamSettings = (props) => {\n  return (\n    <>\n      <h2>Stream</h2>\n      <hr />\n      <h3>Platform</h3>\n      <select\n        value={props.platform}\n        onChange={(e) => props.setPlatform(e.target.value)}\n      >\n        <option value=\"mixer\">Mixer</option>\n        <option value=\"none\">None</option>\n      </select>\n      <h3>Channel</h3>\n      <input\n        value={props.channel}\n        onChange={(e) => {\n          props.setChannel(e.target.value);\n        }}\n      />\n    </>\n  );\n};\n\nexport default StreamSettings;\n","import React, { useRef } from \"react\";\nimport classes from \"./Bind.module.css\";\nimport { getControllerMap } from \"../../../../../gameController\";\n\nfunction Bind(props) {\n  const inputRef = useRef();\n\n  return (\n    <div className={classes.Bind + (props.small ? \" \" + classes.Mini : \"\")}>\n      <div className={classes.ColContainer}>\n        {props.small ? <p>{props.label}</p> : <h4>{props.label}</h4>}\n      </div>\n      <div className={classes.ColContainer}>\n        <input\n          ref={inputRef}\n          value={getControllerMap()[props.buttonKey]}\n          onFocus={(e) => props.setToBind(props.buttonKey, inputRef)}\n          onBlur={(e) => props.setToBind(null, inputRef)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Bind;\n","import React from \"react\";\nimport classes from \"./JoystickBind.module.css\";\nimport Bind from \"../Bind/Bind\";\n\nfunction JoystickBind(props) {\n  return (\n    <div className={classes.Bind}>\n      <div className={classes.ColContainer}>\n        <h4>{props.label}</h4>\n      </div>\n      {props.emulated ? (\n        <>\n          <div className={classes.ColContainer}>\n            <Bind\n              small={true}\n              label={props.buttonKey.search(\"x\") >= 0 ? \"Left\" : \"Up\"}\n              buttonKey={\n                props.buttonKey +\n                (props.buttonKey.search(\"x\") >= 0 ? \"-left\" : \"-up\")\n              }\n              setToBind={props.setToBind}\n            />\n          </div>\n          <div className={classes.ColContainer}>\n            <Bind\n              small={true}\n              label={props.buttonKey.search(\"x\") >= 0 ? \"Right\" : \"Down\"}\n              buttonKey={\n                props.buttonKey +\n                (props.buttonKey.search(\"x\") >= 0 ? \"-right\" : \"-down\")\n              }\n              setToBind={props.setToBind}\n            />\n          </div>\n        </>\n      ) : (\n        <div className={classes.ColContainer}>\n          <Bind\n            small={true}\n            label=\"Stick\"\n            buttonKey={props.buttonKey}\n            setToBind={props.setToBind}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default JoystickBind;\n","import React, { useState, useEffect } from \"react\";\nimport classes from \"./MapManager.module.css\";\nimport Bind from \"./Bind/Bind\";\nimport JoystickBind from \"./JoystickBind/JoystickBind\";\nimport {\n  getControllerMap,\n  setBind,\n  getNextButton,\n  addMirrorMap,\n  removeMirrorMap,\n} from \"../../../../gameController\";\n\nfunction MapManager(props) {\n  let [controllerMap, setControllerMap] = useState(getControllerMap());\n  //This is here to trigger rerenders.\n  const [toBind, setToBind] = useState(null);\n  const [emulated, setEmulated] = useState(controllerMap[\"emulate-joystick\"]);\n\n  useEffect(() => {\n    //console.log(\"Adding MapMirror\");\n    addMirrorMap((map) => {\n      setControllerMap(map);\n      setEmulated(map[\"emulate-joystick\"]);\n    }, \"MapManager\");\n\n    return () => {\n      console.log(\"Removing MapMirror\");\n      removeMirrorMap(\"MapManager\");\n    };\n  }, []);\n\n  const setButtonBindTrigger = (key, inputRef) => {\n    //This is here to trigger rerenders.\n    setToBind(key);\n\n    if (key) {\n      getNextButton((nextButton) => {\n        //console.log(\"Got the presses for \" + key + \": \" + nextButton);\n        setBind(key, nextButton);\n        inputRef.current.blur();\n      });\n    } else {\n      getNextButton(null);\n    }\n  };\n\n  //These could be generated with a object.keys, but I want to organize them and this was the best way I could think of\n  return (\n    <div className={classes.MapManager}>\n      <div className={classes.Row}>\n        <div className={classes.ButtonGroup}>\n          <Bind label=\"Up\" buttonKey=\"up\" setToBind={setButtonBindTrigger} />\n          <Bind\n            label=\"Down\"\n            buttonKey=\"down\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Left\"\n            buttonKey=\"left\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Right\"\n            buttonKey=\"right\"\n            setToBind={setButtonBindTrigger}\n          />\n        </div>\n        <div className={classes.ButtonGroup}>\n          <Bind label=\"A\" buttonKey=\"a\" setToBind={setButtonBindTrigger} />\n          <Bind label=\"B\" buttonKey=\"b\" setToBind={setButtonBindTrigger} />\n          <Bind label=\"X\" buttonKey=\"x\" setToBind={setButtonBindTrigger} />\n          <Bind label=\"Y\" buttonKey=\"y\" setToBind={setButtonBindTrigger} />\n        </div>\n      </div>\n      <div className={classes.ButtonGroup}>\n        <div className={classes.Row}>\n          <h4>Emulate Joysticks</h4>\n          <input\n            className={classes.RowSelect}\n            type=\"checkbox\"\n            checked={emulated}\n            onChange={() => {\n              setEmulated((prev) => {\n                setBind(\"emulate-joystick\", !prev);\n              });\n            }}\n          />\n        </div>\n        <JoystickBind\n          label=\"Left Stick X\"\n          emulated={emulated}\n          buttonKey=\"left-stick-x\"\n          setToBind={setButtonBindTrigger}\n        />\n        <JoystickBind\n          label=\"Left Stick Y\"\n          emulated={emulated}\n          buttonKey=\"left-stick-y\"\n          setToBind={setButtonBindTrigger}\n        />\n        <JoystickBind\n          label=\"Right Stick X\"\n          emulated={emulated}\n          buttonKey=\"right-stick-x\"\n          setToBind={setButtonBindTrigger}\n        />\n        <JoystickBind\n          label=\"Right Stick Y\"\n          emulated={emulated}\n          buttonKey=\"right-stick-y\"\n          setToBind={setButtonBindTrigger}\n        />\n      </div>\n      <div className={classes.Row}>\n        <div className={classes.ButtonGroup}>\n          <Bind\n            label=\"Capture\"\n            buttonKey=\"capture\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Minus\"\n            buttonKey=\"minus\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Left Stick Click\"\n            buttonKey=\"l_stick\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Left Bumper\"\n            buttonKey=\"zl\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Left Trigger\"\n            buttonKey=\"l\"\n            setToBind={setButtonBindTrigger}\n          />\n        </div>\n        <div className={classes.ButtonGroup}>\n          <Bind\n            label=\"Home\"\n            buttonKey=\"home\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Plus\"\n            buttonKey=\"plus\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Right Stick Click\"\n            buttonKey=\"r_stick\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Right Bumper\"\n            buttonKey=\"zr\"\n            setToBind={setButtonBindTrigger}\n          />\n          <Bind\n            label=\"Right Trigger\"\n            buttonKey=\"r\"\n            setToBind={setButtonBindTrigger}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MapManager;\n","import React, { useState } from \"react\";\nimport classes from \"./ControllerSettings.module.css\";\nimport MapManager from \"../MapManager/MapManager\";\n\nfunction ControllerSettings(props) {\n  const [showMapping, setShowMapping] = useState(false);\n\n  return (\n    <>\n      <h2>Controls</h2>\n      <hr />\n      <h3>Controller</h3>\n      <select\n        value={props.activeController.index}\n        onChange={(e) => props.setActiveController(parseInt(e.target.value))}\n      >\n        {props.controllerList.map((i) => {\n          return (\n            <option key={i.index} value={i.index}>\n              {i.id}\n            </option>\n          );\n        })}\n      </select>\n      <p className={classes.SubNote}>\n        If your controller is not showing, press a button on the controller\n      </p>\n      <div className={classes.Row}>\n        <h3>Controller Mapping</h3>\n        <button onClick={() => setShowMapping(!showMapping)}>\n          {showMapping ? \"-\" : \"+\"}\n        </button>\n      </div>\n      {showMapping ? <MapManager /> : null}\n    </>\n  );\n}\n\nexport default ControllerSettings;\n","import { useState, useEffect } from \"react\";\n\nconst useStickyState = (defaultValue, key) => {\n  const [value, setValue] = useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n};\n\nexport default useStickyState;\n","import React, { useState } from \"react\";\nimport { setConnection, disconnectSocket } from \"../../../../socketio\";\nimport useStickyState from \"../../../../customHooks/stickyState\";\n\nconst ConnectionSettings = (props) => {\n  const [connectionStatus, setConnectionStatus] = useState(\"\");\n  const [hostname, setHostname] = useStickyState(\n    window.location.hostname,\n    \"hostname\"\n  );\n  const [port, setPort] = useStickyState(window.location.port, \"port\");\n  //Defining how to connect\n  const connect = () => {\n    setConnectionStatus(\"connecting\");\n    setConnection(\n      hostname + \":\" + port,\n      () => setConnectionStatus(\"connected\"),\n      () => setConnectionStatus(\"disconnected\")\n    );\n  };\n\n  //Defining how to disconnect connect\n  const disconnect = () => {\n    disconnectSocket();\n    setConnectionStatus(\"disconnected\");\n  };\n\n  let jsx = null;\n  switch (connectionStatus) {\n    case \"connecting\":\n      jsx = (\n        <>\n          <h3>\n            Connecting to {hostname}:{port}...\n          </h3>\n          <button onClick={disconnect}>Cancel</button>\n        </>\n      );\n      break;\n    case \"connected\":\n      jsx = (\n        <>\n          <h3>\n            Connected to {hostname}:{port}\n          </h3>\n          <button onClick={disconnect}>Disconnect</button>\n        </>\n      );\n      break;\n    default:\n      jsx = (\n        <>\n          <h3>Hostname</h3>\n          <input\n            value={hostname}\n            onChange={(e) => {\n              setHostname(e.target.value);\n            }}\n          />\n\n          <h3>Port</h3>\n          <input\n            value={port}\n            onChange={(e) => {\n              const reg = /^[0-9]*$/;\n              if (reg.test(e.target.value)) setPort(e.target.value);\n            }}\n          />\n\n          <button onClick={connect}>Connect</button>\n        </>\n      );\n      break;\n  }\n  return (\n    <>\n      <h2>Connection</h2>\n      <hr />\n      {jsx}\n    </>\n  );\n};\n\nexport default ConnectionSettings;\n","import React from \"react\";\nimport classes from \"./ConnectController.module.css\";\nimport StreamSettings from \"./StreamSettings/StreamSettings\";\nimport ControllerSettings from \"./ControllerSettings/ControllerSettings\";\nimport ConnectionSettings from \"./ConnectionSettings/ConnectionSettings\";\n\nconst ConnectController = (props) => {\n  //Determining what to render depending on the connection state\n\n  return (\n    <div className={classes.ConnectController}>\n      <StreamSettings\n        channel={props.channel}\n        setChannel={props.setChannel}\n        platform={props.platform}\n        setPlatform={props.setPlatform}\n      />\n      <ConnectionSettings />\n      <ControllerSettings\n        activeController={props.activeController}\n        setActiveController={props.setActiveController}\n        controllerList={props.controllerList}\n      />\n    </div>\n  );\n};\n\nexport default ConnectController;\n","import React from \"react\";\nimport classes from \"./Controller.module.css\";\nimport Joystick from \"./Joystick/Joystick\";\nimport Diamond from \"./Diamond/Diamond\";\nimport ConnectController from \"./ConnectController/ConnectController\";\nconst Controller = (props) => {\n  return (\n    <div className={classes.Controller}>\n      <div>\n        <div>\n          <div\n            className={\n              classes.LargeButton +\n              (props.controllerState[\"l\"] ? \" \" + classes.Pressed : \"\")\n            }\n          >\n            <p>L</p>\n          </div>\n          <div className={classes.Row}>\n            <div\n              className={\n                classes.SmallButton +\n                (props.controllerState[\"zl\"] ? \" \" + classes.Pressed : \"\")\n              }\n            >\n              <p>ZL</p>\n            </div>\n            <div\n              className={\n                classes.Symbol +\n                (props.controllerState[\"minus\"] ? \" \" + classes.PressedAlt : \"\")\n              }\n            >\n              <p>-</p>\n            </div>\n          </div>\n        </div>\n        <Joystick\n          x={props.controllerState[\"left-stick-x\"]}\n          y={props.controllerState[\"left-stick-y\"]}\n          pressed={props.controllerState[\"l_stick\"]}\n        />\n        <Diamond\n          buttons={[\n            { symbol: \"▶\", pressed: props.controllerState.right },\n            { symbol: \"▼\", pressed: props.controllerState.down },\n            { symbol: \"▲\", pressed: props.controllerState.up },\n            { symbol: \"◀\", pressed: props.controllerState.left },\n          ]}\n        />\n      </div>\n      <div className={classes.Middle}>\n        <ConnectController\n          controllerList={props.controllerList}\n          activeController={props.activeController}\n          setActiveController={props.setActiveController}\n          channel={props.channel}\n          setChannel={props.setChannel}\n          platform={props.platform}\n          setPlatform={props.setPlatform}\n        />\n      </div>\n      <div>\n        <div>\n          <div\n            className={\n              classes.LargeButton +\n              (props.controllerState[\"r\"] ? \" \" + classes.Pressed : \"\")\n            }\n          >\n            <p>R</p>\n          </div>\n          <div className={classes.Row}>\n            <div\n              className={\n                classes.Symbol +\n                (props.controllerState[\"plus\"] ? \" \" + classes.PressedAlt : \"\")\n              }\n            >\n              <p>+</p>\n            </div>\n            <div\n              className={\n                classes.SmallButton +\n                (props.controllerState[\"zr\"] ? \" \" + classes.Pressed : \"\")\n              }\n            >\n              <p>ZR</p>\n            </div>\n          </div>\n        </div>\n        <Diamond\n          buttons={[\n            { symbol: \"a\", pressed: props.controllerState.a },\n            { symbol: \"b\", pressed: props.controllerState.b },\n            { symbol: \"x\", pressed: props.controllerState.x },\n            { symbol: \"y\", pressed: props.controllerState.y },\n          ]}\n        />\n        <Joystick\n          x={props.controllerState[\"right-stick-x\"]}\n          y={props.controllerState[\"right-stick-y\"]}\n          pressed={props.controllerState[\"r_stick\"]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Controller;\n","import React, { useEffect, useRef } from \"react\";\nimport classes from \"./StreamEmbed.module.css\";\n\nconst StreamEmbed = (props) => {\n  const twitchStream = useRef();\n  const script = useRef();\n  const firstUpdate = useRef(true);\n\n  useEffect(() => {\n    script.current = document.createElement(\"script\");\n    script.current.setAttribute(\"src\", \"https://embed.twitch.tv/embed/v1.js\");\n\n    document.body.appendChild(script.current);\n    script.current.addEventListener(\"load\", () => {\n      twitchStream.current = new window.Twitch.Embed(\"video-embed\", {\n        height: \"100%\",\n        width: \"100%\",\n        layout: \"video\",\n        channel: props.channel,\n        theme: \"dark\",\n      });\n    });\n  }, [props.channel]);\n\n  useEffect(() => {\n    if (!firstUpdate.current) {\n      if (props.platform === \"twitch\") {\n        twitchStream.current.setChannel(props.channel.toLowerCase());\n      }\n    } else {\n      firstUpdate.current = false;\n    }\n  }, [props.channel, props.platform]);\n\n  let stream = null;\n  switch (props.platform) {\n    case \"twitch\":\n      stream = <div id=\"video-embed\" className={classes.StreamEmbed} />;\n      break;\n    case \"mixer\":\n      stream = (\n        <iframe\n          className={classes.StreamEmbed}\n          title=\"Halios's player frame\"\n          i18n-title=\"channel#ShareDialog:playerEmbedFrame|Embed player Frame copied from share dialog\"\n          allowfullscreen=\"true\"\n          src={\n            \"https://mixer.com/embed/player/\" +\n            props.channel +\n            \"?disableLowLatency=0\"\n          }\n          width=\"99.5%\"\n          height=\"100%\"\n        >\n          {\" \"}\n        </iframe>\n      );\n      break;\n    default:\n      break;\n  }\n  return stream;\n};\n\nexport default StreamEmbed;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport classes from \"./App.module.css\";\nimport Header from \"./components/Header/Header\";\nimport Controller from \"./components/Controller/Controller\";\nimport {\n  translateGamepad,\n  setActiveGamepad,\n  pressKey,\n  releaseKey,\n} from \"./gameController\";\nimport StreamEmbed from \"./components/StreamEmbed/StreamEmbed\";\nimport useStickyState from \"./customHooks/stickyState\";\n\nconst App = (props) => {\n  const [controllerList, setControllerList] = useState([\n    {\n      index: -1,\n      id: \"Keyboard\",\n    },\n  ]);\n  const [activeController, setActiveController] = useState(-1);\n  const [controllerState, setControllerState] = useState({});\n  const [channel, setChannel] = useStickyState(\"monstercat\", \"channel\");\n  const [platform, setPlatform] = useState(\"none\");\n  const [timestamp, setTimestamp] = useState(0);\n  let pollRef;\n\n  //Handles the Controllers Connection\n  const addController = (e) => {\n    console.log(e.gamepad.id + \"connected\");\n    setControllerList((prevControllerList) => [\n      ...prevControllerList,\n      {\n        index: e.gamepad.index,\n        id: e.gamepad.id,\n      },\n    ]);\n  };\n\n  //Handles the Controllers Disconnect\n  const removeController = useCallback(\n    (e) => {\n      if (activeController === e.gamepad.index) setActiveController(-1); //If the controller is disconnected, set the active controller to the keyboard\n      setControllerList((prevControllerList) => [\n        ...prevControllerList.filter((gp) => gp.index !== e.gamepad.index),\n      ]);\n    },\n    [activeController]\n  );\n\n  //the gamepad poll using animation frames\n  const pollGamepads = useCallback(() => {\n    //get the list of all active gamepads\n    let gamepads = navigator.getGamepads\n      ? navigator.getGamepads()\n      : navigator.webkitGetGamepads\n      ? navigator.webkitGetGamepads()\n      : [];\n\n    //destructures the controlers index and id\n    let { index, id } = controllerList.find(\n      (i) => i.index === activeController\n    );\n\n    if (gamepads[index]) {\n      setControllerState((prevState) => {\n        if (prevState.timestamp !== gamepads[index].timestamp) {\n          setTimestamp((prevTimestamp) => gamepads[index].timestamp);\n          return translateGamepad(gamepads[index]);\n        } else {\n          return prevState;\n        }\n      });\n    }\n\n    pollRef = requestAnimationFrame(pollGamepads);\n  }, [activeController]);\n\n  //adds an event listener to check for new gamepads\n  useEffect(() => {\n    window.addEventListener(\"gamepadconnected\", addController);\n    window.addEventListener(\"keydown\", (e) => pressKey(e, setControllerState));\n    window.addEventListener(\"keyup\", (e) => releaseKey(e, setControllerState));\n  }, []);\n\n  //adds an event listener to check for removed gamepads\n  useEffect(() => {\n    window.addEventListener(\"gamepaddisconnected\", removeController);\n\n    return () => {\n      window.removeEventListener(\"gamepaddisconnected\", removeController);\n    };\n  }, [removeController]);\n\n  //Starts a poll for gamepad whenever it is selected from the drop down menu\n  useEffect(() => {\n    //the keyboard is -1 so we don't want to poll a keyboard\n    setActiveGamepad(\n      activeController,\n      controllerList.find((i) => i.index === activeController).id\n    );\n    if (activeController !== -1) {\n      //console.log(\"Polling \" + controllerList.find((i) => i.index === activeController).id);\n      pollRef = requestAnimationFrame(pollGamepads);\n    }\n\n    //tells the poll to stop when a new controller is selected.\n    return () => {\n      //console.log(\"Stopped polling \" + controllerList.find((i) => i.index === activeController).id);\n      cancelAnimationFrame(pollRef);\n    };\n  }, [pollGamepads, activeController]);\n\n  return (\n    <div className={classes.App}>\n      <Header />\n      <StreamEmbed channel={channel} platform={platform} />\n      <Controller\n        controllerList={controllerList}\n        activeController={activeController}\n        setActiveController={setActiveController}\n        controllerState={controllerState}\n        channel={channel}\n        setChannel={setChannel}\n        platform={platform}\n        setPlatform={setPlatform}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bind\":\"Bind_Bind__1zXef\",\"Mini\":\"Bind_Mini__XQhFF\",\"ColContainer\":\"Bind_ColContainer__2cjEH\"};"],"sourceRoot":""}